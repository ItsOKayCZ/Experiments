attach 3308
r payload
r $(cat payload)
r $(cat payload)
r
r $(cat payload )
x/100 $eax
x/100wx $eax
asmsearch "jmp eax"
asmsearch "jmp $eax"
asmsearch "jmp eax"
asmsearch "mov esp, eax; ret"
asmsearch "call esp"
asmsearch "call eap"
asmsearch "call eax"
x 0x80492b0
x/w 0x80492b0
x/i 0x80492b0
r $(cat payload )
x/x $eip
b main
r $(cat payload )
ni
delete 1
break vuln
r $(cat payload )
ni
x/x $eax
ni
ni
r $(cat payload )
ni
r $(cat payload )
ni
x/x $eax
ni
x/x $eax
x/i $eax
disassemble vuln
b *0x08048405
r $(cat payload )
ni
x/x $eax
x/i $eax
ni
c
c
c
c
b *0x08048405
r $(cat payload )
ni
b *0x08048405
r $(cat payload )
ni
b *0x08048405
r $(cat payload )
ni
ni
r
x/x 0x80496f4
b main
r
x 0x80496f4
x/64wx 0x80496f4
x/64wx 0x80496f4
x/64wx 0x80496f4
x/64wx 0x80496f4
x/64wx 0x80496f4
x/64wx 0x80496f4
x/64wx 0x80496f4
x/64wx 0x80496f4
x/64wx 0x80496f4
x/64wx 0x80496f4
x/64wx 0x80496f4
x/64wx 0x80496f4
x/64wx 0x80496f4
r `cat payload
r `cat payload`
b *0x08048405
r `cat payload`
r `cat payload`
r `cat payload`
r `cat payload`
ni
r `cat payload`
ni
asmsearch "ret"
r `cat payload`
ni
asmsearch "jmp ?"
q
b *0x08048405
r `cat payload`
$eip = $eax
eip = $eax
p eip = $eax
p $eip = $eax
ni
r `cat payload`
asmsearch "jmp esp"
asmsearch "jmp ebp"
r `cat payload`
ni
ni
x/x $ebp
x/wxx $ebp
asmsearch "jmp ?"
r `cat payload`
asmsearch "jmp esp"
asmsearch "jmp esp" libc
help asmsearch 
info proc map
asmsearch "jmp esp" libc
x/4i 0xf7dd2121
asmsearch "jmp esp" libc
x/i 0xf7dd2bb5
b *0x08048405
r `cat payload`
ni
ni
r `cat payload`
ni
c
r `cat payload`
b *0xffffd4a3
r `cat payload`
r `cat payload`
r `cat payload`
r `cat payload`
r `cat payload`
r `cat payload`
r `cat payload`
r `cat payload`
r `cat payload`
r `cat payload`
r `cat payload`
i b
delet 1
delete 1
b vuln
r `cat payload`
ni
si
disassemble vuln l
disassemble vuln 
b *0x08048405
r `cat payload`
checksec ropbuf_dbg
ni
